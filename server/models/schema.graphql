scalar DateTime

type Query {
    allowedPosts: [Post!]!
    publishedPosts: [Post!]!
    post(postId: ID!): Post
    postsByUser(userId: ID!): [Post!]!
}

type Mutation {
    createUser(name: String!, sessionHash: String!): User
    createDraft(content: String!, userId: ID!): Post
    publish(postId: ID!): Post
    like(postId: ID!, userId: ID!): Post
    dislike(postId: ID!, userId: ID!): Post
}

type Subscription {
    posts: Post
}

type User {
    id: ID!
    writtenPosts: [Post!]!
    likedPosts: [Post!]!
    name: String
    sessionHash: String!
    created: DateTime!
}

type Post {
    id: ID!
    author: User
    likedBy: [User!]!
    content: String
    score: Int
    published: Boolean!
    expired: Boolean!
    expiration: DateTime!
    created: DateTime!
}
